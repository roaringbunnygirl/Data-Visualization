---
title: "L06 Scales, Axes, & Legends"
subtitle: "Data Visualization (STAT 302)" 
author: "Sherry Chen"
pagetitle: "L06 Sherry Chen"

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
reference-location: margin
citation-location: margin 
---


## Overview

The goal of this lab is to explore ways to manage and manipulate scales, axes, and legends within `ggplot2`. 

## Datasets

We'll be using the `tech_stocks.rda`, `corruption.rda`, `cdc.txt`, and a toy dataset.

```{r}
#| label: load-pkgs-data
#| code-fold: false


# load package(s)
library(ggplot2)
library(tidyverse)
library(scales)
library(ggrepel)


# load datasets
load("data/corruption.rda")
load("data/tech_stocks.rda")


# Read in the cdc dataset
cdc <- read_delim(file = "data/cdc.txt", delim = "|") |>
  mutate(
    genhlth = factor(
      genhlth,
      levels = c("excellent", "very good", "good", "fair", "poor")
      )
    )

# set seed
set.seed(86420)

# selecting a random subset of size 100
cdc_small <- cdc |> slice_sample(n = 100)

# Generating toy dataset for exercise 2
toy_data <- tibble(
  theta = seq(0, 2 * pi, length.out = 100),
  obs = rnorm(100, sin(theta), 0.1),
  larger_than = if_else(abs(obs) > abs(sin(theta)), "1", "0")
)
```

## Exercise 1

Using the `tech_stocks` dataset, recreate the following graphic as precisely as possible.

*Hints:*

- `key_glyph`
- `scales` package will be useful
- legend `linewidth` is 1.3
- legend useful values: 0.75 and 0.85
- Eliminated extra space in horizontal direction

::: {.callout-tip icon=false}
## Solution


```{r}
#| label: ex1 plot

ggplot(tech_stocks, aes(x = date, y = price_indexed, color = company)) +
  geom_line(key_glyph = "timeseries") +
  theme_minimal() +
  scale_y_continuous(
    labels = NULL,   # Remove left y-axis labels
    sec.axis = sec_axis(~ ., labels = dollar)  # Add secondary y-axis on the right with dollar labels
  ) +
  theme(
    plot.title = element_text(hjust = 0, vjust = 1),
    #plot.margin = unit(c(2, 2, 2, 2), "cm"),
    legend.key.size = unit(1.3, 'lines'),
    legend.position = c(0.75, 0.85),
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank()) +# Remove y-axis title 
  #guides(color = guide_legend(title = NULL)) +
  guides(color = (guide_legend(override.aes=list(linewidth = 1.3), title = NULL))) +
   scale_x_date(labels = date_format("%Y"), limits = as.Date(c("2006-06-06", NA))) +
  labs(title = "Stock price, indexed")  +
  scale_x_date(expand = c(0, 0))

 
```


:::

## Exercise 2

Using the `corruption.rda` dataset, recreate the following graphic as precisely as possible.

*Hints:*
  
- Only use 2015 data
- Transparency is 0.6
- `"y ~ log(x)"`; method `"lm"`; and color is `grey40`
- Point size is 3 in legend
- color palette is `"Set1"`
- Package `ggrepel`
  - `box.padding` is 0.6
  - Minimum segment length is 0
  - seed is 9876

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: ex-2 plot

# Dataset for plotting 
corruption_plot <- corruption |>
  filter(year == 2015) |>
  na.omit()

# Build plot
ggplot(corruption_plot, aes(x = cpi, y = hdi)) +
  geom_point(aes(color = region), alpha = 0.6) +
  geom_smooth(
    method = "lm",
    formula = y ~ log(x),
    se = FALSE,
    color = "grey40"
  ) +
  theme_minimal() +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(
    title = "Corruption and Human Development (2015)",
    x = "Corruption Perceptions Index, 2015\n(100 = least corrupt)",
    y = "Human Development Index, 2015\n(1.0 = most developed)"
  )

```


:::
  
## Exercise 3

Use `toy_data` to recreate the following graphic as precisely as possible.

*Hints:*

- Point sizes are 3
- Point colors: `#E66100`, `#5D3A9B`
- Point transparency is 0.8
- `stat_function()` will be useful
  - line size is 1.3 and line color is `#56B4E9`
- `quote()` will be useful

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: ex3 plot

ggplot(toy_data, aes(theta, obs)) +
  geom_point(aes(color = factor(larger_than)), alpha = 0.8, size = 3) +
  scale_color_manual(values = c("0" = "#5D3A9B", "1" = "#E66100")) +
  stat_function(fun = quote(sin), size = 1.3, color = "#56B4E9") +
  theme_minimal() +
  labs(x = expression(theta), y = expression(sin(theta))) +
  theme(legend.position = "none")
```


:::

## Exercise 4

Using `cdc_small`, construct a scatterplot of `weight` by `height` with the following requirements: 

- Size of plotting characters should be 3.
- Color and shape should both identify `genhlth`.
- Only one legend: for both color and shape.
- Legend title should be "General Health?" with a newline starting after general.
- Legend categories should be ordered from excellent (top) to poor (bottom) with each word in category capitalized in the legend.
- Legend should be placed in the lower right-hand corner of the plotting area. 
- Color should follow the `"Set1"` palette.
- Shape should have a solid triangle (17) for excellent, solid circle (19) for very good, an `x` (4) for poor, an hollow rotated square with an `x` in it (9) for fair, and a solid square (15) for good.
- `height` values should be limited between 55 and 80.
- `height` axis should display every 5th number between 55 and 80 and be appropriately labeled (i.e. `55 in`, `60 in`, ..., `80 in`). No axis title is necessary.
- `weight` values should be limited between 100 and 300. 
- `weight` axis should be `trans` to log base 10 scale, but still display weights in pounds starting at 100 and displaying every 25 pounds until 300. Must be appropriately labeled (i.e. `100 lbs`, `125 lbs`, ..., `300 lbs`). No axis title is necessary.
- Graph title should be `CDC BRFSS: Weight by Height`.
- Minimal theme.

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: ex4 plot

cdc_filtered <- cdc_small %>%
  filter(height >= 55 & height <= 80, weight >= 100 & weight <= 300)

# Define the mapping for shapes
shape_mapping <- c("EXCELLENT" = 17, "VERY GOOD" = 19, "GOOD" = 15, "FAIR" = 9, "POOR" = 4)

# Define the mapping for the order of legend
levels_ordered <- c("EXCELLENT", "VERY GOOD", "GOOD", "FAIR", "POOR")

# Reorder the levels of genhlth factor
cdc_filtered$genhlth <- factor(toupper(cdc_filtered$genhlth), levels = levels_ordered)

ggplot(cdc_filtered, aes(x = height, y = weight, color = genhlth, shape = genhlth)) +
  geom_point(size = 3) +
  scale_color_brewer(palette = "Set1") +
  scale_shape_manual(values = shape_mapping) +
  scale_x_continuous(limits = c(55, 80), breaks = seq(55, 80, 5), labels = paste0(seq(55, 80, 5), " in")) +
  scale_y_continuous(trans = 'log10', limits = c(100, 300), breaks = seq(100, 300, 25), labels = paste0(seq(100, 300, 25), " lbs")) +
  labs(title = "CDC BRFSS: Weight by Height", color = "GENERAL\nHEALTH?", shape = "GENERAL\nHEALTH?") +
  theme_minimal() +
  theme(
    legend.position = c(0.95, 0.05), # Position legend in the lower-right corner
    legend.justification = c("right", "bottom"),
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank())  # Remove y-axis title

```


:::
