---
title: "L08 Coords"
subtitle: "Data Visualization (STAT 302)"
author: "Sherry Chen"
pagetitle: "L08 Sherry Chen"
date: today

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
reference-location: margin
citation-location: margin
---

## Dataset

We'll be using the `mod_nba_adv_stats_2023_24.txt` dataset --- add to your project's `/data` subdirectory. The `mod_nba_adv_stats_2023_24_codebook.txt` provides a quick description of the variables in the dataset --- suggest adding it to the `/data` subdirectory as well. 

```{r}
#| label: load-pkgs-data

# load package(s)
library(tidyverse)
library(ggthemes)

# load data
nba_data <- read_delim("mod_nba_adv_stats_2023_24.txt", delim = "|") |> 
  janitor::clean_names()

```

## Exercise 

<!-- See the html instructions since they are complete with images and are the official instructions. -->

Using the `mod_nba_adv_stats_2023_24.txt` dataset we will try to recreate/approximate the plot type featured in the [FiveThirtyEight](http://fivethirtyeight.com/) article [Kawhi Leonard Is The Most Well-Rounded Elite Shooter Since Larry Bird](http://fivethirtyeight.com/features/kawhi-leonard-is-the-most-well-rounded-elite-shooter-since-larry-bird/) for any player of your choice for the 2023-2024 season. 

:::{.callout-note icon=false}

## Goal

Replicate the graphic below as closely as possible --- see instructions for image.

:::

### Start with data wrangling

When data wrangling we will need a helper function for creating the quartiles for players. Additionally, it will be useful to exclude players that played less than 10 games or played less than 5 minutes a game. That is, we only want to include "qualified" players.

```{r}
#| label: helper-function


# Returns quartile rank
quartile_rank <- function(x = 0:99) {
  # Set quartile
  quart_breaks <- c(
    -Inf,
    quantile(x,
      probs = c(0.25, 0.5, 0.75),
      na.rm = TRUE
    ),
    Inf
  )
  cut(x = x, breaks = quart_breaks, labels = FALSE)
}
```

:::{.callout-important}
**Add comments to** the code below where indicated. The added comments should concisely describe what the following line(s) of code do in the data wrangling process  
:::

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: data-wrangling


# Graphical data
nba_graph_dat <- nba_data |> 
  # filter g stands for game, greater or equal to 10 and mp divide by game that is greater or equal to 5 to make sure there are good players on the floor. It got rid of the garbage timer.
  filter(g >= 10, mp / g >= 5) |> 
  # mutate added the ts_quant(true shooting percentage), trb_quant(true rebounding), dbpm_quant(defense of plus minus), ast_quant(assist ranking), usg_quant. each number determines which quartile they are in, 1 is the worst 4 is the best. it has the 5 sectors of our graph.
  mutate(
    ts_quant = quartile_rank(ts_percent),
    trb_quant = quartile_rank(trb_percent),
    dbpm_quant = quartile_rank(dbpm),
    ast_quant = quartile_rank(ast_percent),
    usg_quant = quartile_rank(usg_percent)
  ) |> 
  #we are only selectinf the players that has the "_quant" data, with the five listed above
  select(player, contains("_quant")) |> 
  # this function transforms the data from a wide format to a long format. In the original wide format, each player has multiple columns for different metrics (ts_quant, trb_quant, dbpm_quant, ast_quant, usg_quant). After pivoting, there will be one row for each metric of each player. The names_to = "variable" argument specifies that the names of the original columns (like ts_quant, trb_quant, etc.) will be gathered into a new column called variable. The values_to = "value" argument indicates that the values from these columns will be gathered into a new column called value.
  pivot_longer(
    cols = -player, 
    names_to = "variable", 
    values_to = "value"
    ) |> 
  # This arrange function sorts the resulting long-format data frame by the player column. This ensures that the data for each player is grouped together and ordered alphabetically by player name.
  arrange(player)
```

:::

### Build the plot

*Hints:*

- Image width is 8 in, height is 10 in --- use code chunk yaml
- center the image output --- use code chunk yaml
- shrink size down for display to 50% width --- use code chunk yaml
- All added text, except title, is done with `annotate()`
- set `axis.text` to blank in theme
- size 3 and 5 could be useful

::: {.callout-tip icon=false}
## Solution
```{r}
#| label: skill-chart-base
#| fig-width: 8
#| fig-height: 10
#| out-width: "50%"
#| fig-align: "center"


#which player?
player_name <- "Anthony Edwards"

nba_graph_dat |> 
  filter(player == player_name) |> 
  ggplot(mapping = aes(x = variable, y = value)) +
  geom_col(fill = "#E38893", width = 1) +
  #add quartile boundaries
  geom_hline(yintercept = 1:4, linetype = "dotted") + 
  # add skill/sector boundaries
  geom_segment(x = .5:4.5, y = 0, xend = .5:4.5, yend = 4) +
  #change order of skills and removed x-axis label
  scale_x_discrete(
    name = NULL,
    limits = c("ts_quant","usg_quant", "dbpm_quant", "trb_quant", "ast_quant")
  ) + 
  theme(
    axis.text = element_blank()
  ) +
  #add skill/sector labels
  annotate(
    geom = "text",
    x = 1:5,
    y = 5, 
    label = c(
      "TRUE\nSHOOTING", "USAGE\nRATE", "DEFENSIVE\nBPM", "REBOUND\nRATE", "ASSIST\nRATE"
    ),
    size = 5
  ) +
  #add quartile boundary labels
  annotate(
    geom = "text",
    x = 3,
    y = 1:4, 
    label = c(
      "1st-25th", "25th-50th", "50th-75th", "75th-99th"
    ),
    size = 3
  ) +
  labs(
    title = str_c(player_name, "\n(2015"),
    y = NULL
  ) +
  coord_polar()


```



:::

## Challenge

:::{.callout-important icon=false}

Challenge is optional for all students, but we recommend trying them out!

:::

<!-- See the html instructions since they are complete with images and are the official instructions. -->

Continue the work of trying to recreate the graphic from the article. Your final plot should look as follows:

::: {.callout-tip icon=false}
## Solution

:::